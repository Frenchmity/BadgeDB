function w(o){window.enmity.plugins.registerPlugin(o)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const m=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const y=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function h(o){return window.enmity.patcher.create(o)}var g="BadgeDB",p="1.0.0",f="Badge yourself up",F="https://badgedb.enmity.frcat.xyz/dist/BadgeDB.js",S=[{name:"French Cat",id:"811770910624579584"}],b={name:g,version:p,description:f,sourceUrl:F,authors:S};const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList;const B=e.Image;e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl,e.ScrollView,e.SectionList,e.StatusBar,e.StyleSheet,e.Switch,e.Text,e.TextInput,e.TouchableHighlight;const C=e.TouchableOpacity;e.TouchableWithoutFeedback,e.Touchable;const T=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio,e.FormRow,e.FormSection,e.FormSelect,e.FormSubLabel,e.FormSwitch,e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;function v(o){return window.enmity.utilities.wrapInHooks(o)}function x(...o){return window.enmity.modules.getByName(...o)}window.enmity.modules.common;const c=h("badgedb"),k={...b,onStart(){const o=x("ProfileBadges",{default:!1});return c.after(o,"default",(n,[{user:i,isEnmity:s,...l}],t)=>{if(s)return;const[d,u]=m.useState([]);return m.useEffect(()=>{try{this.fetchUserBadges(i.id).then(u)}catch{console.error(`Failed to request/parse badges for ${i.id}`)}},[]),!d.length||(t||(t=v(o.default)({user:new Proxy({},{get:(r,a)=>a==="flags"?-1:a==="hasFlag"?()=>!0:i[a]}),isEnmity:!0,...l}),t!=null&&t.props&&(t.props.badges=[])),!t)||t.props.badges.push(...d.map(r=>m.createElement(T,{key:r,__enmity:!0,style:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"}},m.createElement(Badge,{type:r})))),t}),c.unpatchAll},onStop(){c.unpatchAll()},async fetchUserBadges(o){return await fetch(BadgesDomain+o+".json",{headers:{"Cache-Control":"no-cache"}}).then(n=>n.json()).catch(()=>[])},Badge({type:o}){const[n,i]=m.useState(null);return m.useEffect(()=>{try{this.fetchBadge(o).then(i)}catch(s){console.error(`Failed to get badge data for ${o}.`,s.message)}},[]),n!=null&&n.url?m.createElement(C,{onPress:()=>{y.open({content:n.name,source:{uri:n.url}})}},m.createElement(B,{source:{uri:n.url},style:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}})):null},async fetchBadge(o){const n=await fetch(BadgesDomain+`data/${o}.json`,{headers:{"Cache-Control":"no-cache"}}).then(i=>i.json()).catch(()=>{});return console.log(n),n}};w(k);
